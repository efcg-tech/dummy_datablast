select 
    app,
    platform,
    user_pseudo_id,
    dt,
    array_agg(app_version order by ts)[offset(0)] as app_version,
    any_value(device_category) as device_category,
    any_value(device_brand_name) as device_brand_name,
    any_value(device_model_name) as device_model_name,
    any_value(device_marketing_name) as device_marketing_name,
    any_value(device_os) as device_os,
    any_value(device_os_version) as device_os_version,
    any_value(vendor_id) as vendor_id,
    any_value(advertising_id) as advertising_id,
    countif(event_name = 'level_start') as level_start,
    countif(event_name = 'level_end') as level_end,
    countif(event_name = 'level_fail') as level_fail,
    countif(event_name = 'level_reset') as level_reset,
    countif(event_name = 'level_retry') as level_retry,
    countif(event_name = 'level_start_quickplay') as level_start_quickplay,
    countif(event_name = 'level_end_quickplay') as level_end_quickplay,
    countif(event_name = 'level_fail_quickplay') as level_fail_quickplay,
    countif(event_name = 'level_reset_quickplay') as level_reset_quickplay,
    countif(event_name = 'level_retry_quickplay') as level_retry_quickplay,
    countif(event_name = 'level_up') as level_up,
    countif(event_name = 'use_extra_steps') as use_extra_steps,
    countif(event_name = 'no_more_extra_steps') as no_more_extra_steps,
    countif(event_name = 'challenge_a_friend') as challenge_a_friend,
    countif(event_name = 'challenge_accepted') as challenge_accepted,
    countif(event_name = 'ad_reward') as ad_reward,
from efcg.events
where dt between '{{ utils.date_format(data_interval_start, "", "%Y-%m-%d") }}' and '{{ utils.date_format(data_interval_end, "", "%Y-%m-%d") }}'
group by 1,2,3,4
